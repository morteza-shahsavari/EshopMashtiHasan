// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Security.Domain.Models;

#nullable disable

namespace Security.Domain.Migrations
{
    [DbContext(typeof(SecurityContext))]
    partial class SecurityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Security.Domain.Models.ProjectAction", b =>
                {
                    b.Property<int>("ProjectActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectActionID"));

                    b.Property<string>("PersianTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProjectActionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProjectControllerID")
                        .HasColumnType("int");

                    b.HasKey("ProjectActionID");

                    b.HasIndex("ProjectControllerID");

                    b.ToTable("ProjectActions");
                });

            modelBuilder.Entity("Security.Domain.Models.ProjectArea", b =>
                {
                    b.Property<int>("ProjectAreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectAreaID"));

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PersianTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ProjectAreaID");

                    b.ToTable("ProjectAreas");
                });

            modelBuilder.Entity("Security.Domain.Models.ProjectController", b =>
                {
                    b.Property<int>("ProjectControllerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectControllerID"));

                    b.Property<string>("PersianTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProjectAreaID")
                        .HasColumnType("int");

                    b.Property<string>("ProjectControllerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("ProjectControllerID");

                    b.HasIndex("ProjectAreaID");

                    b.ToTable("ProjectControllers");
                });

            modelBuilder.Entity("Security.Domain.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Security.Domain.Models.RoleAction", b =>
                {
                    b.Property<int>("RoleActionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleActionID"));

                    b.Property<bool>("HasPermission")
                        .HasColumnType("bit");

                    b.Property<int>("ProjectActionID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("RoleActionID");

                    b.HasIndex("ProjectActionID");

                    b.HasIndex("RoleID");

                    b.ToTable("RoleActions");
                });

            modelBuilder.Entity("Security.Domain.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsEmailActivated")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserID");

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Security.Domain.Models.ProjectAction", b =>
                {
                    b.HasOne("Security.Domain.Models.ProjectController", "ProjectController")
                        .WithMany("ProjectActions")
                        .HasForeignKey("ProjectControllerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProjectController");
                });

            modelBuilder.Entity("Security.Domain.Models.ProjectController", b =>
                {
                    b.HasOne("Security.Domain.Models.ProjectArea", "ProjectArea")
                        .WithMany("ProjctControllers")
                        .HasForeignKey("ProjectAreaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProjectArea");
                });

            modelBuilder.Entity("Security.Domain.Models.RoleAction", b =>
                {
                    b.HasOne("Security.Domain.Models.ProjectAction", "ProjectAction")
                        .WithMany("RoleActions")
                        .HasForeignKey("ProjectActionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Security.Domain.Models.Role", "Role")
                        .WithMany("RoleActions")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ProjectAction");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Security.Domain.Models.User", b =>
                {
                    b.HasOne("Security.Domain.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Security.Domain.Models.ProjectAction", b =>
                {
                    b.Navigation("RoleActions");
                });

            modelBuilder.Entity("Security.Domain.Models.ProjectArea", b =>
                {
                    b.Navigation("ProjctControllers");
                });

            modelBuilder.Entity("Security.Domain.Models.ProjectController", b =>
                {
                    b.Navigation("ProjectActions");
                });

            modelBuilder.Entity("Security.Domain.Models.Role", b =>
                {
                    b.Navigation("RoleActions");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
